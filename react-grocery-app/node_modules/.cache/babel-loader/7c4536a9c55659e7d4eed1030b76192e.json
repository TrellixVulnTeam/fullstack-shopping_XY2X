{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jchab\\\\Desktop\\\\react-grocery-app\\\\my-app\\\\src\\\\components\\\\Needed.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Remove from \"./Remove\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./Needed.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Needed() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const STORAGE_KEY = \"myValueKey\";\n  const storageItem = localStorage.getItem(STORAGE_KEY) || \"\";\n  const items = JSON.parse(storageItem);\n  const [list, setList] = useState(items);\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(list));\n  }, [list]);\n\n  function handleChange(event) {\n    setName(event.currentTarget.value);\n  }\n\n  function handleAdd() {\n    const newList = list.concat({\n      name,\n      id: uuidv4()\n    });\n    setList(newList);\n    setName(\"\");\n  }\n\n  function handleRemove(item) {\n    const newList = [...list];\n    newList.splice(list.indexOf(item), 1);\n    setList(newList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        placeholder: \"Enter item\",\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAdd,\n        className: \"btn btn-dark btn-sm\",\n        children: \"Add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-dark btn-sm\",\n          onClick: () => onClick(item),\n          children: \"Remove item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), \"//\", /*#__PURE__*/_jsxDEV(Remove, {\n          item: item,\n          onClick: handleRemove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Needed, \"mb+ZAKloza2OEVzmjIGGjtSL3DY=\");\n\n_c = Needed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Needed\");","map":{"version":3,"sources":["C:/Users/jchab/Desktop/react-grocery-app/my-app/src/components/Needed.tsx"],"names":["useState","useEffect","Remove","v4","uuidv4","Needed","name","setName","STORAGE_KEY","storageItem","localStorage","getItem","items","JSON","parse","list","setList","setItem","stringify","handleChange","event","currentTarget","value","handleAdd","newList","concat","id","handleRemove","item","splice","indexOf","map","onClick"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAO,eAAP;;AASA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMQ,WAAW,GAAG,YAApB;AACA,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBH,WAArB,KAAqC,EAAzD;AACA,QAAMI,KAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAArB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAQY,KAAR,CAAhC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACO,OAAb,CAAqBT,WAArB,EAAkCK,IAAI,CAACK,SAAL,CAAeH,IAAf,CAAlC;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,WAASI,YAAT,CAAsBC,KAAtB,EAAgE;AAC9Db,IAAAA,OAAO,CAACa,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAP;AACD;;AAED,WAASC,SAAT,GAAqB;AACnB,UAAMC,OAAO,GAAGT,IAAI,CAACU,MAAL,CAAY;AAAEnB,MAAAA,IAAF;AAAQoB,MAAAA,EAAE,EAAEtB,MAAM;AAAlB,KAAZ,CAAhB;AACAY,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACAjB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAED,WAASoB,YAAT,CAAsBC,IAAtB,EAAmC;AACjC,UAAMJ,OAAO,GAAG,CAAC,GAAGT,IAAJ,CAAhB;AACAS,IAAAA,OAAO,CAACK,MAAR,CAAed,IAAI,CAACe,OAAL,CAAaF,IAAb,CAAf,EAAmC,CAAnC;AACAZ,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AACE,QAAA,KAAK,EAAElB,IADT;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAEa;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEI,SAFX;AAGE,QAAA,SAAS,EAAC,qBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA,gBACGR,IAAI,CAACgB,GAAL,CAAUH,IAAD,iBACR;AAAA,mBACGA,IAAI,CAACtB,IADR,oBACc;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,cAAc,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADd,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,qBAFZ;AAGE,UAAA,OAAO,EAAE,MAAM0B,OAAO,CAACJ,IAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,qBAUE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEA,IAAd;AAAoB,UAAA,OAAO,EAAED;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAASC,IAAI,CAACF,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA/DuBrB,M;;KAAAA,M","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Remove from \"./Remove\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./Needed.scss\";\r\n\r\ninterface IItem {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ntype Items = IItem[];\r\n\r\nexport default function Needed() {\r\n  const [name, setName] = useState(\"\");\r\n  const STORAGE_KEY = \"myValueKey\";\r\n  const storageItem = localStorage.getItem(STORAGE_KEY) || \"\";\r\n  const items: Items = JSON.parse(storageItem);\r\n  const [list, setList] = useState<Items>(items);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(list));\r\n  }, [list]);\r\n\r\n  function handleChange(event: React.FormEvent<HTMLInputElement>) {\r\n    setName(event.currentTarget.value);\r\n  }\r\n\r\n  function handleAdd() {\r\n    const newList = list.concat({ name, id: uuidv4() });\r\n    setList(newList);\r\n    setName(\"\");\r\n  }\r\n\r\n  function handleRemove(item: IItem) {\r\n    const newList = [...list];\r\n    newList.splice(list.indexOf(item), 1);\r\n    setList(newList);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"addItem\">\r\n        <input\r\n          value={name}\r\n          placeholder=\"Enter item\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleAdd}\r\n          className=\"btn btn-dark btn-sm\"\r\n        >\r\n          Add item\r\n        </button>\r\n      </div>\r\n      <br />\r\n      <ol>\r\n        {list.map((item) => (\r\n          <li key={item.id}>\r\n            {item.name} <input type=\"checkbox\" defaultChecked={false} />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-dark btn-sm\"\r\n              onClick={() => onClick(item)}\r\n            >\r\n              Remove item\r\n            </button>\r\n            //\r\n            <Remove item={item} onClick={handleRemove} />\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}